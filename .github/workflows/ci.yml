name: CI

on:
  push:
    branches:
    - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Instalando dependências
      working-directory: ./api
      run: |
        yarn
        yarn run test

    - name: Generate tag
      # Como esse step tem um output, cria um id para ser facilmente referenciado nos próximos steps
      id: generate_tag
      run: | 
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.3.1
      with:
        audience: sts.amazonaws.com
        aws-region: us-east-2
        role-to-assume: arn:aws:iam::476422658806:role/ecr-role

    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build && push docker image
      id: build-docker-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ steps.generate_tag.outputs.sha }}
      run: |
        docker build -t $REGISTRY/mateus-ci:$TAG -f prod.Dockerfile .
        docker push $REGISTRY/mateus-ci:$TAG
        IMAGE=$(echo $REGISTRY/mateus-ci:$TAG)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT

    - name: Deploy to App Runner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
        service: mateus-digix-api
        image: steps.build-docker-image.outputs.image
        access-role-arn: arn:aws:iam::476422658806:role/app-runner-role
        region: us-east-2
        cpu: 1
        momory: 2
        port: 3000